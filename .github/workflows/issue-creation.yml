name: Issue Creation trigger
on:
  issues:
    types: [assigned]
env:
  GITHUB_ISSUE_ASSIGNEES: '["SvitlanaKozeletska"]'
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      issue-assignees: ${{ steps.init.outputs.env }}
    steps:
      - name: Make environment variables global
        id: init
        run: |
          echo "env=${{ env.GITHUB_ISSUE_ASSIGNEES }}" >> $GITHUB_OUTPUT
  get-event-details:
    needs: build
    concurrency:
      group:
        ${{ github.event.issue.number }}
      cancel-in-progress: true
    if: |
      github.event.issue.assignee != null &&
      (contains(fromJSON(needs.build.outputs.env), github.event.issue.assignee.login)) &&
      (!contains(github.event.issue.labels.*.name, 'JIRA sync'))
    runs-on: ubuntu-latest
    steps:
      - name: 'Get repo code'
        uses: actions/checkout@v3
      - name: 'Output event details'
        uses: SvitlanaKozeletska/jira-ticket-action@main
        with:
          GITHUB_ISSUE_ASSIGNEES: ${{env.GITHUB_ISSUE_ASSIGNEES}}
  # information:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: 'Get repo code'
  #       uses: actions/checkout@v3
  #     - name: 'Create JIRA ticket'
  #       id: ticket
  #       uses: SvitlanaKozeletska/jira-ticket-action@v1.1
  #       with:
  #         issue: ${{ toJSON(github.event.issue) }}
  #         JIRA_TOKEN: ${{ secrets.JIRADEV_AUTHORIZATION_TOKEN }}
  #         ISSUE_TYPE: 'Task b'
#      - name: Output ticket creation response
#        run: |
#          echo "Response: ${{ toJSON(steps.ticket.outputs.http-response) }}"
  # report: # to be run only in case JIRA ticket job failed
  #   needs: [get-event-details]
  #   if: failure()
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Output information
  #       run: echo "Something went wrong on JIRA ticket creat"
